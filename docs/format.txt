

一个完整的EOS工程应包含一下三部分:
  1. src文件:   *.cpp
  2. include文件:   *.hpp
  3. abi文件:       *.abi

所以启动翻译器后应当自动生成这三个文件.

 因此,在eos文件夹下应当分别有三个文件负责每种文件的翻译和构建以及检查.
 内容不应该放在txt文件中,那样会难以调用,因此将它们写入.go文件中,以变量形式存在,将会为构建带来大量便利.

note:
在刚才的试验中发现,一行一行得添加代码进去效果并不理想,
应当是将所需信息储存进结构体中,然后每次生成的时候调用结构体.
这样,按级别划分:
cpp>include|namespace|class>public|private>function>value

现在还没想好函数内部该如何处理...

我应该设计一种编程语言来专门用于写区块链上的合约..

所以,当下的后续工作应该是